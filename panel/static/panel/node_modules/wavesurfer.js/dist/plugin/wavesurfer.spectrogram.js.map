{"version":3,"file":"wavesurfer.spectrogram.js","mappings":"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","sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/./src/plugin/spectrogram/fft.js","webpack://WaveSurfer.[name]/./src/plugin/spectrogram/index.js","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/webpack/before-startup","webpack://WaveSurfer.[name]/webpack/startup","webpack://WaveSurfer.[name]/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"spectrogram\"] = factory();\n})(self, function() {\nreturn ","/* eslint-disable complexity, no-redeclare, no-var, one-var */\n\n/**\n * Calculate FFT - Based on https://github.com/corbanbrook/dsp.js\n *\n * @param {Number} bufferSize Buffer size\n * @param {Number} sampleRate Sample rate\n * @param {Function} windowFunc Window function\n * @param {Number} alpha Alpha channel\n */\nexport default function FFT(bufferSize, sampleRate, windowFunc, alpha) {\n    this.bufferSize = bufferSize;\n    this.sampleRate = sampleRate;\n    this.bandwidth = (2 / bufferSize) * (sampleRate / 2);\n\n    this.sinTable = new Float32Array(bufferSize);\n    this.cosTable = new Float32Array(bufferSize);\n    this.windowValues = new Float32Array(bufferSize);\n    this.reverseTable = new Uint32Array(bufferSize);\n\n    this.peakBand = 0;\n    this.peak = 0;\n\n    var i;\n    switch (windowFunc) {\n        case 'bartlett':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / (bufferSize - 1)) *\n                    ((bufferSize - 1) / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        case 'bartlettHann':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.62 -\n                    0.48 * Math.abs(i / (bufferSize - 1) - 0.5) -\n                    0.38 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'blackman':\n            alpha = alpha || 0.16;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (1 - alpha) / 2 -\n                    0.5 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1)) +\n                    (alpha / 2) *\n                        Math.cos((4 * Math.PI * i) / (bufferSize - 1));\n            }\n            break;\n        case 'cosine':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.cos(\n                    (Math.PI * i) / (bufferSize - 1) - Math.PI / 2\n                );\n            }\n            break;\n        case 'gauss':\n            alpha = alpha || 0.25;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.pow(\n                    Math.E,\n                    -0.5 *\n                        Math.pow(\n                            (i - (bufferSize - 1) / 2) /\n                                ((alpha * (bufferSize - 1)) / 2),\n                            2\n                        )\n                );\n            }\n            break;\n        case 'hamming':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.54 -\n                    0.46 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'hann':\n        case undefined:\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.5 * (1 - Math.cos((Math.PI * 2 * i) / (bufferSize - 1)));\n            }\n            break;\n        case 'lanczoz':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    Math.sin(Math.PI * ((2 * i) / (bufferSize - 1) - 1)) /\n                    (Math.PI * ((2 * i) / (bufferSize - 1) - 1));\n            }\n            break;\n        case 'rectangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = 1;\n            }\n            break;\n        case 'triangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / bufferSize) *\n                    (bufferSize / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        default:\n            throw Error(\"No such window function '\" + windowFunc + \"'\");\n    }\n\n    var limit = 1;\n    var bit = bufferSize >> 1;\n    var i;\n\n    while (limit < bufferSize) {\n        for (i = 0; i < limit; i++) {\n            this.reverseTable[i + limit] = this.reverseTable[i] + bit;\n        }\n\n        limit = limit << 1;\n        bit = bit >> 1;\n    }\n\n    for (i = 0; i < bufferSize; i++) {\n        this.sinTable[i] = Math.sin(-Math.PI / i);\n        this.cosTable[i] = Math.cos(-Math.PI / i);\n    }\n\n    this.calculateSpectrum = function(buffer) {\n        // Locally scope variables for speed up\n        var bufferSize = this.bufferSize,\n            cosTable = this.cosTable,\n            sinTable = this.sinTable,\n            reverseTable = this.reverseTable,\n            real = new Float32Array(bufferSize),\n            imag = new Float32Array(bufferSize),\n            bSi = 2 / this.bufferSize,\n            sqrt = Math.sqrt,\n            rval,\n            ival,\n            mag,\n            spectrum = new Float32Array(bufferSize / 2);\n\n        var k = Math.floor(Math.log(bufferSize) / Math.LN2);\n\n        if (Math.pow(2, k) !== bufferSize) {\n            throw 'Invalid buffer size, must be a power of 2.';\n        }\n        if (bufferSize !== buffer.length) {\n            throw 'Supplied buffer is not the same size as defined FFT. FFT Size: ' +\n                bufferSize +\n                ' Buffer Size: ' +\n                buffer.length;\n        }\n\n        var halfSize = 1,\n            phaseShiftStepReal,\n            phaseShiftStepImag,\n            currentPhaseShiftReal,\n            currentPhaseShiftImag,\n            off,\n            tr,\n            ti,\n            tmpReal;\n\n        for (var i = 0; i < bufferSize; i++) {\n            real[i] =\n                buffer[reverseTable[i]] * this.windowValues[reverseTable[i]];\n            imag[i] = 0;\n        }\n\n        while (halfSize < bufferSize) {\n            phaseShiftStepReal = cosTable[halfSize];\n            phaseShiftStepImag = sinTable[halfSize];\n\n            currentPhaseShiftReal = 1;\n            currentPhaseShiftImag = 0;\n\n            for (var fftStep = 0; fftStep < halfSize; fftStep++) {\n                var i = fftStep;\n\n                while (i < bufferSize) {\n                    off = i + halfSize;\n                    tr =\n                        currentPhaseShiftReal * real[off] -\n                        currentPhaseShiftImag * imag[off];\n                    ti =\n                        currentPhaseShiftReal * imag[off] +\n                        currentPhaseShiftImag * real[off];\n\n                    real[off] = real[i] - tr;\n                    imag[off] = imag[i] - ti;\n                    real[i] += tr;\n                    imag[i] += ti;\n\n                    i += halfSize << 1;\n                }\n\n                tmpReal = currentPhaseShiftReal;\n                currentPhaseShiftReal =\n                    tmpReal * phaseShiftStepReal -\n                    currentPhaseShiftImag * phaseShiftStepImag;\n                currentPhaseShiftImag =\n                    tmpReal * phaseShiftStepImag +\n                    currentPhaseShiftImag * phaseShiftStepReal;\n            }\n\n            halfSize = halfSize << 1;\n        }\n\n        for (var i = 0, N = bufferSize / 2; i < N; i++) {\n            rval = real[i];\n            ival = imag[i];\n            mag = bSi * sqrt(rval * rval + ival * ival);\n\n            if (mag > this.peak) {\n                this.peakBand = i;\n                this.peak = mag;\n            }\n            spectrum[i] = mag;\n        }\n        return spectrum;\n    };\n}\n","/* eslint-enable complexity, no-redeclare, no-var, one-var */\n\nimport FFT from './fft';\n\n/**\n * @typedef {Object} SpectrogramPluginParams\n * @property {string|HTMLElement} container Selector of element or element in\n * which to render\n * @property {number} fftSamples=512 Number of samples to fetch to FFT. Must be\n * a power of 2.\n * @property {boolean} splitChannels=false Render with separate spectrograms for\n * the channels of the audio\n * @property {boolean} labels Set to true to display frequency labels.\n * @property {number} noverlap Size of the overlapping window. Must be <\n * fftSamples. Auto deduced from canvas size by default.\n * @property {string} windowFunc='hann' The window function to be used. One of\n * these: `'bartlett'`, `'bartlettHann'`, `'blackman'`, `'cosine'`, `'gauss'`,\n * `'hamming'`, `'hann'`, `'lanczoz'`, `'rectangular'`, `'triangular'`\n * @property {?number} alpha Some window functions have this extra value.\n * (Between 0 and 1)\n * @property {number} pixelRatio=wavesurfer.params.pixelRatio to control the\n * size of the spectrogram in relation with its canvas. 1 = Draw on the whole\n * canvas. 2 = Draw on a quarter (1/2 the length and 1/2 the width)\n * @property {number} frequencyMin=0 Min frequency to scale spectrogram.\n * @property {number} frequencyMax=12000 Max frequency to scale spectrogram.\n * Set this to samplerate/2 to draw whole range of spectrogram.\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('spectrogram')`\n * @property {?number[][]} colorMap A 256 long array of 4-element arrays.\n * Each entry should contain a float between 0 and 1 and specify\n * r, g, b, and alpha.\n */\n\n/**\n * Render a spectrogram visualisation of the audio.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import SpectrogramPlugin from 'wavesurfer.spectrogram.js';\n *\n * // commonjs\n * var SpectrogramPlugin = require('wavesurfer.spectrogram.js');\n *\n * // if you are using <script> tags\n * var SpectrogramPlugin = window.WaveSurfer.spectrogram;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     SpectrogramPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class SpectrogramPlugin {\n    /**\n     * Spectrogram plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {SpectrogramPluginParams} params Parameters used to initialise the plugin\n     * @return {PluginDefinition} An object representing the plugin.\n     */\n    static create(params) {\n        return {\n            name: 'spectrogram',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                FFT: FFT\n            },\n            instance: SpectrogramPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n\n        this.frequenciesDataUrl = params.frequenciesDataUrl;\n        this._onScroll = e => {\n            this.updateScroll(e);\n        };\n        this._onRender = () => {\n            this.render();\n        };\n        this._onWrapperClick = e => {\n            this._wrapperClickHandler(e);\n        };\n        this._onReady = () => {\n            const drawer = (this.drawer = ws.drawer);\n\n            this.container =\n                'string' == typeof params.container\n                    ? document.querySelector(params.container)\n                    : params.container;\n\n            if (!this.container) {\n                throw Error('No container for WaveSurfer spectrogram');\n            }\n            if (params.colorMap) {\n                if (params.colorMap.length < 256) {\n                    throw new Error('Colormap must contain 256 elements');\n                }\n                for (let i = 0; i < params.colorMap.length; i++) {\n                    const cmEntry = params.colorMap[i];\n                    if (cmEntry.length !== 4) {\n                        throw new Error(\n                            'ColorMap entries must contain 4 values'\n                        );\n                    }\n                }\n                this.colorMap = params.colorMap;\n            } else {\n                this.colorMap = [];\n                for (let i = 0; i < 256; i++) {\n                    const val = (255 - i) / 256;\n                    this.colorMap.push([val, val, val, 1]);\n                }\n            }\n            this.width = drawer.width;\n            this.pixelRatio = this.params.pixelRatio || ws.params.pixelRatio;\n            this.fftSamples =\n                this.params.fftSamples || ws.params.fftSamples || 512;\n            this.height = this.fftSamples / 2;\n            this.noverlap = params.noverlap;\n            this.windowFunc = params.windowFunc;\n            this.alpha = params.alpha;\n            this.splitChannels = params.splitChannels;\n            this.channels = this.splitChannels ? ws.backend.buffer.numberOfChannels : 1;\n\n            // Getting file's original samplerate is difficult(#1248).\n            // So set 12kHz default to render like wavesurfer.js 5.x.\n            this.frequencyMin = params.frequencyMin || 0;\n            this.frequencyMax = params.frequencyMax || 12000;\n\n            this.createWrapper();\n            this.createCanvas();\n            this.render();\n\n            drawer.wrapper.addEventListener('scroll', this._onScroll);\n            ws.on('redraw', this._onRender);\n        };\n    }\n\n    init() {\n        // Check if wavesurfer is ready\n        if (this.wavesurfer.isReady) {\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n        }\n    }\n\n    destroy() {\n        this.unAll();\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('redraw', this._onRender);\n        this.drawer && this.drawer.wrapper.removeEventListener('scroll', this._onScroll);\n        this.wavesurfer = null;\n        this.util = null;\n        this.params = null;\n        if (this.wrapper) {\n            this.wrapper.removeEventListener('click', this._onWrapperClick);\n            this.wrapper.parentNode.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    }\n\n    createWrapper() {\n        const prevSpectrogram = this.container.querySelector('spectrogram');\n        if (prevSpectrogram) {\n            this.container.removeChild(prevSpectrogram);\n        }\n        const wsParams = this.wavesurfer.params;\n        this.wrapper = document.createElement('spectrogram');\n        // if labels are active\n        if (this.params.labels) {\n            const labelsEl = (this.labelsEl = document.createElement('canvas'));\n            labelsEl.classList.add('spec-labels');\n            this.drawer.style(labelsEl, {\n                left: 0,\n                position: 'absolute',\n                zIndex: 9,\n                height: `${this.height * this.channels / this.pixelRatio}px`,\n                width: `${55 / this.pixelRatio}px`\n            });\n            this.wrapper.appendChild(labelsEl);\n            this.loadLabels(\n                'rgba(68,68,68,0.5)',\n                '12px',\n                '10px',\n                '',\n                '#fff',\n                '#f7f7f7',\n                'center',\n                '#specLabels'\n            );\n        }\n\n        this.drawer.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: `${this.height * this.channels / this.pixelRatio}px`\n        });\n\n        if (wsParams.fillParent || wsParams.scrollParent) {\n            this.drawer.style(this.wrapper, {\n                width: '100%',\n                overflowX: 'hidden',\n                overflowY: 'hidden'\n            });\n        }\n        this.container.appendChild(this.wrapper);\n\n        this.wrapper.addEventListener('click', this._onWrapperClick);\n    }\n\n    _wrapperClickHandler(event) {\n        event.preventDefault();\n        const relX = 'offsetX' in event ? event.offsetX : event.layerX;\n        this.fireEvent('click', relX / this.width || 0);\n    }\n\n    createCanvas() {\n        const canvas = (this.canvas = this.wrapper.appendChild(\n            document.createElement('canvas')\n        ));\n\n        this.spectrCc = canvas.getContext('2d');\n\n        this.util.style(canvas, {\n            position: 'absolute',\n            zIndex: 4\n        });\n    }\n\n    render() {\n        this.updateCanvasStyle();\n\n        if (this.frequenciesDataUrl) {\n            this.loadFrequenciesData(this.frequenciesDataUrl);\n        } else {\n            this.getFrequencies(this.drawSpectrogram);\n        }\n    }\n\n    updateCanvasStyle() {\n        const width = Math.round(this.width / this.pixelRatio) + 'px';\n        this.canvas.width = this.width;\n        this.canvas.height = this.height * this.channels;\n        this.canvas.style.width = width;\n    }\n\n    drawSpectrogram(frequenciesData, my) {\n        if (!isNaN(frequenciesData[0][0])) { // data is 1ch [sample, freq] format\n            // to [channel, sample, freq] format\n            frequenciesData = [frequenciesData];\n        }\n\n        const spectrCc = my.spectrCc;\n        const height = my.height;\n        const width = my.width;\n        const freqFrom = my.buffer.sampleRate / 2;\n        const freqMin = my.frequencyMin;\n        const freqMax = my.frequencyMax;\n\n        if (!spectrCc) {\n            return;\n        }\n\n        for (let c = 0; c < frequenciesData.length; c++) { // for each channel\n            const pixels = my.resample(frequenciesData[c]);\n            const imageData = new ImageData(width, height);\n\n            for (let i = 0; i < pixels.length; i++) {\n                for (let j = 0; j < pixels[i].length; j++) {\n                    const colorMap = my.colorMap[pixels[i][j]];\n                    const redIndex = ((height - j) * width + i) * 4;\n                    imageData.data[redIndex] = colorMap[0] * 255;\n                    imageData.data[redIndex + 1] = colorMap[1] * 255;\n                    imageData.data[redIndex + 2] = colorMap[2] * 255;\n                    imageData.data[redIndex + 3] = colorMap[3] * 255;\n                }\n            }\n\n            // scale and stack spectrograms\n            createImageBitmap(imageData).then(renderer =>\n                spectrCc.drawImage(renderer,\n                    0, height * (1 - freqMax / freqFrom), // source x, y\n                    width, height * (freqMax - freqMin) / freqFrom, // source width, height\n                    0, height * c, // destination x, y\n                    width, height // destination width, height\n                )\n            );\n        }\n    }\n\n    getFrequencies(callback) {\n        const fftSamples = this.fftSamples;\n        const buffer = (this.buffer = this.wavesurfer.backend.buffer);\n        const channels = this.channels;\n\n        if (!buffer) {\n            this.fireEvent('error', 'Web Audio buffer is not available');\n            return;\n        }\n\n        // This may differ from file samplerate. Browser resamples audio.\n        const sampleRate = buffer.sampleRate;\n        const frequencies = [];\n\n        let noverlap = this.noverlap;\n        if (!noverlap) {\n            const uniqueSamplesPerPx = buffer.length / this.canvas.width;\n            noverlap = Math.max(0, Math.round(fftSamples - uniqueSamplesPerPx));\n        }\n\n        const fft = new FFT(\n            fftSamples,\n            sampleRate,\n            this.windowFunc,\n            this.alpha\n        );\n\n        for (let c = 0; c < channels; c++) { // for each channel\n            const channelData = buffer.getChannelData(c);\n            const channelFreq = [];\n            let currentOffset = 0;\n\n            while (currentOffset + fftSamples < channelData.length) {\n                const segment = channelData.slice(\n                    currentOffset,\n                    currentOffset + fftSamples\n                );\n                const spectrum = fft.calculateSpectrum(segment);\n                const array = new Uint8Array(fftSamples / 2);\n                let j;\n                for (j = 0; j < fftSamples / 2; j++) {\n                    array[j] = Math.max(-255, Math.log10(spectrum[j]) * 45);\n                }\n                channelFreq.push(array);\n                // channelFreq: [sample, freq]\n\n                currentOffset += fftSamples - noverlap;\n            }\n            frequencies.push(channelFreq);\n            // frequencies: [channel, sample, freq]\n        }\n        callback(frequencies, this);\n    }\n\n    loadFrequenciesData(url) {\n        const request = this.util.fetchFile({ url: url });\n\n        request.on('success', data =>\n            this.drawSpectrogram(JSON.parse(data), this)\n        );\n        request.on('error', e => this.fireEvent('error', e));\n\n        return request;\n    }\n\n    freqType(freq) {\n        return freq >= 1000 ? (freq / 1000).toFixed(1) : Math.round(freq);\n    }\n\n    unitType(freq) {\n        return freq >= 1000 ? 'KHz' : 'Hz';\n    }\n\n    loadLabels(\n        bgFill,\n        fontSizeFreq,\n        fontSizeUnit,\n        fontType,\n        textColorFreq,\n        textColorUnit,\n        textAlign,\n        container\n    ) {\n        const frequenciesHeight = this.height;\n        bgFill = bgFill || 'rgba(68,68,68,0)';\n        fontSizeFreq = fontSizeFreq || '12px';\n        fontSizeUnit = fontSizeUnit || '10px';\n        fontType = fontType || 'Helvetica';\n        textColorFreq = textColorFreq || '#fff';\n        textColorUnit = textColorUnit || '#fff';\n        textAlign = textAlign || 'center';\n        container = container || '#specLabels';\n        const bgWidth = 55;\n        const getMaxY = frequenciesHeight || 512;\n        const labelIndex = 5 * (getMaxY / 256);\n        const freqStart = this.frequencyMin;\n        const step = (this.frequencyMax - freqStart) / labelIndex;\n\n        // prepare canvas element for labels\n        const ctx = this.labelsEl.getContext('2d');\n        this.labelsEl.height = this.height * this.channels;\n        this.labelsEl.width = bgWidth;\n\n        if (!ctx) {\n            return;\n        }\n\n        for (let c = 0; c < this.channels; c++) { // for each channel\n            // fill background\n            ctx.fillStyle = bgFill;\n            ctx.fillRect(0, c * getMaxY, bgWidth, (1 + c) * getMaxY);\n            ctx.fill();\n            let i;\n\n            // render labels\n            for (i = 0; i <= labelIndex; i++) {\n                ctx.textAlign = textAlign;\n                ctx.textBaseline = 'middle';\n\n                const freq = freqStart + step * i;\n                const label = this.freqType(freq);\n                const units = this.unitType(freq);\n                const yLabelOffset = 2;\n                const x = 16;\n                let y;\n\n                if (i == 0) {\n                    y = (1 + c) * getMaxY + i - 10;\n                    // unit label\n                    ctx.fillStyle = textColorUnit;\n                    ctx.font = fontSizeUnit + ' ' + fontType;\n                    ctx.fillText(units, x + 24, y);\n                    // freq label\n                    ctx.fillStyle = textColorFreq;\n                    ctx.font = fontSizeFreq + ' ' + fontType;\n                    ctx.fillText(label, x, y);\n                } else {\n                    y = (1 + c) * getMaxY - i * 50 + yLabelOffset;\n                    // unit label\n                    ctx.fillStyle = textColorUnit;\n                    ctx.font = fontSizeUnit + ' ' + fontType;\n                    ctx.fillText(units, x + 24, y);\n                    // freq label\n                    ctx.fillStyle = textColorFreq;\n                    ctx.font = fontSizeFreq + ' ' + fontType;\n                    ctx.fillText(label, x, y);\n                }\n            }\n        }\n    }\n\n    updateScroll(e) {\n        if (this.wrapper) {\n            this.wrapper.scrollLeft = e.target.scrollLeft;\n        }\n    }\n\n    resample(oldMatrix) {\n        const columnsNumber = this.width;\n        const newMatrix = [];\n\n        const oldPiece = 1 / oldMatrix.length;\n        const newPiece = 1 / columnsNumber;\n        let i;\n\n        for (i = 0; i < columnsNumber; i++) {\n            const column = new Array(oldMatrix[0].length);\n            let j;\n\n            for (j = 0; j < oldMatrix.length; j++) {\n                const oldStart = j * oldPiece;\n                const oldEnd = oldStart + oldPiece;\n                const newStart = i * newPiece;\n                const newEnd = newStart + newPiece;\n\n                const overlap =\n                    oldEnd <= newStart || newEnd <= oldStart\n                        ? 0\n                        : Math.min(\n                            Math.max(oldEnd, newStart),\n                            Math.max(newEnd, oldStart)\n                        ) -\n                        Math.max(\n                            Math.min(oldEnd, newStart),\n                            Math.min(newEnd, oldStart)\n                        );\n                let k;\n                /* eslint-disable max-depth */\n                if (overlap > 0) {\n                    for (k = 0; k < oldMatrix[0].length; k++) {\n                        if (column[k] == null) {\n                            column[k] = 0;\n                        }\n                        column[k] += (overlap / newPiece) * oldMatrix[j][k];\n                    }\n                }\n                /* eslint-enable max-depth */\n            }\n\n            const intColumn = new Uint8Array(oldMatrix[0].length);\n            let m;\n\n            for (m = 0; m < oldMatrix[0].length; m++) {\n                intColumn[m] = column[m];\n            }\n\n            newMatrix.push(intColumn);\n        }\n\n        return newMatrix;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/plugin/spectrogram/index.js\");\n",""],"names":["FFT","bufferSize","sampleRate","windowFunc","alpha","bandwidth","sinTable","Float32Array","cosTable","windowValues","reverseTable","Uint32Array","peakBand","peak","i","Math","abs","cos","PI","pow","E","undefined","sin","Error","limit","bit","calculateSpectrum","buffer","real","imag","bSi","sqrt","rval","ival","mag","spectrum","k","floor","log","LN2","length","halfSize","phaseShiftStepReal","phaseShiftStepImag","currentPhaseShiftReal","currentPhaseShiftImag","off","tr","ti","tmpReal","fftStep","N","SpectrogramPlugin","params","ws","wavesurfer","util","frequenciesDataUrl","_onScroll","e","updateScroll","_onRender","render","_onWrapperClick","_wrapperClickHandler","_onReady","drawer","container","document","querySelector","colorMap","cmEntry","val","push","width","pixelRatio","fftSamples","height","noverlap","splitChannels","channels","backend","numberOfChannels","frequencyMin","frequencyMax","createWrapper","createCanvas","wrapper","addEventListener","on","isReady","once","unAll","un","removeEventListener","parentNode","removeChild","prevSpectrogram","wsParams","createElement","labels","labelsEl","classList","add","style","left","position","zIndex","appendChild","loadLabels","display","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","overflowY","event","preventDefault","relX","offsetX","layerX","fireEvent","canvas","spectrCc","getContext","updateCanvasStyle","loadFrequenciesData","getFrequencies","drawSpectrogram","round","frequenciesData","my","isNaN","freqFrom","freqMin","freqMax","c","pixels","resample","imageData","ImageData","j","redIndex","data","createImageBitmap","then","renderer","drawImage","callback","frequencies","uniqueSamplesPerPx","max","fft","channelData","getChannelData","channelFreq","currentOffset","segment","slice","array","Uint8Array","log10","url","request","fetchFile","JSON","parse","freq","toFixed","bgFill","fontSizeFreq","fontSizeUnit","fontType","textColorFreq","textColorUnit","textAlign","frequenciesHeight","bgWidth","getMaxY","labelIndex","freqStart","step","ctx","fillStyle","fillRect","fill","textBaseline","label","freqType","units","unitType","yLabelOffset","x","y","font","fillText","scrollLeft","target","oldMatrix","columnsNumber","newMatrix","oldPiece","newPiece","column","Array","oldStart","oldEnd","newStart","newEnd","overlap","min","intColumn","m","name","deferInit","staticProps","instance"],"sourceRoot":""}